steps:
  # 1. Docker 이미지 빌드
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', '-t', 'asia-docker.pkg.dev/elevated-valve-459107-h8/backend/cafeboo:latest', '.'
    ]

  # 2. 이미지 Artifact Registry에 push
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 'asia-docker.pkg.dev/elevated-valve-459107-h8/backend/cafeboo:latest'
    ]

  # 3. SSH로 프라이빗 VM 접속 후 배포
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - -c
      - |
        gcloud compute ssh dev-private-vm \
          --zone=asia-northeast3-a \
          --project=elevated-valve-459107-h8 \
          --command="docker stop cafeboo || true && \
                    docker rm cafeboo || true && \
                    docker pull asia-docker.pkg.dev/elevated-valve-459107-h8/backend/cafeboo:latest && \
                    docker run -d --name cafeboo -p 8080:8080 \
                      -e SPRING_PROFILES_ACTIVE=prod \
                      -e JWT_SECRET='${_JWT_SECRET}' \
                      -e SPRING_DATASOURCE_PASSWORD='${_SPRING_PASSWORD}' \
                      asia-docker.pkg.dev/elevated-valve-459107-h8/backend/cafeboo:latest"
      secretEnv: ['JWT_SECRET', 'SPRING_PASSWORD']

availableSecrets:
  secretManager:
    - versionName: projects/elevated-valve-459107-h8/secrets/jwt-secret/versions/latest
      env: JWT_SECRET
    - versionName: projects/elevated-valve-459107-h8/secrets/spring-db-password/versions/latest
      env: SPRING_PASSWORDx
